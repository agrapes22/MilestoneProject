<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBsAAAEAIAAUDgAAFgAAACgAAAAgAAAANgAAAAEAIAAAAAAAgA0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXk5gCtq7QApKGsAKCdqQCfnagAoZ6pAKKf
        qgCgnagAoZ6pAKOgqwCgnqkAnpynAJ6bpgCem6cAoZ6qANHQ1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMbFyQC6uL4AvbvAAF1lYQSbnKAXpaOrMKaj
        rUipp7Bbq6iyZ6mnsG2qqLFsqqixZKekrlakoqtFpaKmLqWhmRWUjB8DtbPNAL69vwDPzccAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxsTIALi2vBOwrbZgtq/BqLyz
        ytWxqbztrKiz+by7v/7Av8L/x8XI/8jHyv/DwsX/wL/D/bSzyPinpc7sn53N05eWxaSpp75avbu+EsfG
        ywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGxccG0M/Rm8nI
        yvvAtsv/r6DD/5aKrP+OhqX/lI2t/5mRtP+Zkbb/mI+2/5mRtv+Zkrb/koy1/4yIuf+LiMX/jYvU/7Sy
        0frKycudysnLBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMXE
        xxG/vcPQmZKv/46Euv+ondL/v7Tk/8u/7//QwfT/0cH3/8+99//Nuff/yrT3/76q9f+qm+//lYrk/4N8
        1f94c8L/lJG3/7y6wtbEwsUVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAurmxF6CbyNeaj+7/tqv+/8a9///Lwv//x73//7yz/v+zqv7/rqP+/6md/v+klv7/npD+/5iN
        //+RiP//h4H//3Vz/v9pafP/kZDP3sG/tR0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AB/4AAAf/AAAP/+AAf///H////x///////8=
</value>
  </data>
</root>